#!/bin/bash

PIDFILE=/var/run/bugzilla.pid

setupDatabaseRootPassword() {
    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" /bugzilla/scripts/setupDatabaseRootPassword
}

changeDatabaseRootPassword() {
    arguments=( "$@" )

    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" /bugzilla/scripts/changeDatabaseRootPassword "${arguments[1]}"
}

setupDatabaseUserPassword() {
    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" /bugzilla/scripts/setupDatabaseUserPassword
}

changeDatabaseUserPassword() {
    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" /bugzilla/scripts/changeDatabaseUserPassword
}

createDatabase() {
    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" /bugzilla/scripts/createDatabase
}

backup() {
    arguments=( "$@" )

    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" /bugzilla/scripts/backup "${arguments[1]}"
}

restore() {
    arguments=( "$@" )

    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" /bugzilla/scripts/restore "${arguments[1]}"
}

bash() {
    CID=$(cat "$PIDFILE")
    if [ "$CID" == "" ];
    then
        exit 1
    fi

    docker exec -it "$CID" sh -c "cd /bugzilla && /bin/bash"
}

case $1 in
    setRootPassword)
        setupDatabaseRootPassword $@
        ;;
    changeRootPassword)
        changeDatabaseRootPassword $@
        ;;
    setUserPassword)
        setupDatabaseUserPassword $@
        ;;
    changeUserPassword)
        changeDatabaseUserPassword $@
        ;;
    createDatabase)
        createDatabase $@
        ;;
    backup)
        backup $@
        ;;
    restore)
        restore $@
        ;;
    bash)
        bash
        ;;
    *)
        echo "Usage: $0 (setRootPassword | changeRootPassword | setUserPassword | changeUserPassword | createDatabase | backup | restore | bash)"
        ;;
esac
